:root {
  --link-color: #fa0;
  --link_visited_color: #05676e;
  --link_active: #489c79;
  --black: #000;
  --white: #fff;
  --lightgrey: #d3d3d3;
  --big-font: 30px;
  --medium-font: 28px;
  --small-font: 20px;
  --extra-small-font: 16px;
  --padding_small: 10px;
  --padding_big: 20px;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #f8f3ee;
  font-family: 'Playfair Display', serif;  /* Font details */
  font-weight: 400;
  font-size: var(--extra-small-font);

  /* Sets the font size to 16px */
  line-height: 1.6;

  /* Sets the line-height to 1.6 */
}

h1 {
  font-size: var(--big-font);  /* for heading 1 */
  font-weight: 700;
}

h2 {
  font-size: var(--medium-font);   /* for heading 2 */
  font-weight: 400;
}

h3 {
  font-size: var(--small-font);  /* for heading 3 */
  font-weight: 400;
}

a:link{
  color: var(--link-color);    /* link color */
}

/*
input, textarea, select, button, {
  font-family: system-ui;
}
*/
a:visited {
  color: var(--link_visited_color);
}

a:active {
  /* selected link color */
  color: var(--link_active_color);
}

a:hover,
a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

.general {
  text-align: center;
}

.new_general {
  text-align: center;
}

.adjusting {
  text-align: center;
}

button,
.button {                    /* button details */
  border: none;
  display: inline-block;
  font-family: inherit;
  background-color: #357b70;
  color: var(--white);
  text-decoration: none;
  padding: var(--pading_small);
  border-radius: 3px;
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.9s;
  transition-property: opacity;
}

button:hover,
button:focus,
.button:hover,
.button:focus {   /* buttonâ€™s hover styling */
  cursor: pointer;
  opacity: 0.8;
}

.button__secondary {         /* Secondary button details */
  background-color: #e0b354;
  color: #2b2b2b;
}

.navigation-list__item--active {  /* if navigation list item active */
  text-decoration: none;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.main__navigation {
  text-transform: uppercase;
  display: inline-block;
  margin-left: 15px;
}

.page_header {
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: var(--padding_big);
}

.page_header__item {
  flex: 0 1 200px;
}

.page_header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.profile {
  max-width: 700px;
  margin: 0 auto;

  /* display: flex;
     flex-direction: column;
     align-items: center;
     justify-content: center; */
}

.profile__text {
  text-align: right;
  flex: 1 1 100px;
}

.profile__portrait {
  float: left;
  width: 250px;
  margin-right: 50px;
  border-radius: 70%;
}

.page_footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}

nav {
  display: inline;
}

.grid__item {
  display: inline-block;
  width: 33%;
}

@supports (display: grid) {
  .grid {
    display: grid;

    /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    margin: 0;
  }

  .grid__item {
    background-color: var(--lightgray);
    width: auto;
    min-height: auto;
    margin: 0;
  }

  .grid__item:last-child {
    grid-column: 3 / 3;
    grid-row: 1 / 3;
  }
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }

  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }

  h1 {
    font-size: 22px;
  }
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }

  50% {
    fill: #fcffad;
  }

  100% {
    fill: #f76414;
  }
}

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

/* transition */

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }

  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }

  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
